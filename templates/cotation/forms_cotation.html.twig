{# templates/cotation/create.html.twig #}

{% extends 'base.html.twig' %}

{% block title %}Create Cotations{% endblock %}

{% block body %}
    <h1>Cotations pour {{ entreprise.nom }}</h1>

    {# Div qui contient les forms, un pour chaque Critere  #}
    <div id="div_cotations" data-entreprise ={{ entreprise.id }}>
        
        {% for form in forms %}

            {# On veut afficher la question du critére et la façon la plus simple est d'obtenir l'entité associée au form
            Dans le controller on avait déjà fixé le Critere et l'User, on n'a pas vu ça en cours #}
            {% set cotation = form.vars.data %} 
            
            <h4>Critére: {{ cotation.critere.questioncritere }}</h4>

            {# on rajoute des attributs quand on crée le formulaire. On peut le faire dans le controller ou dans la vue.
            Dans ce cas on le fait dans la vue: 
            On a besoin de rajouter une class et incruster l'id du Critére dans chaque form
            pour l'obtenir avec du JS et l'utiliser dans l'appel AXIOS de l'action qui enregistrera la Cotation 
            Vous pouvez les voir, inspectez le DOM (balise form) pour les voir! #}

            {{ form_start(form, 
                        {'attr' : {    
                            'class': 'form-cotation', 
                            'data-critere': cotation.critere.id  
                        }})
                     
            }}
            {{ form_row(form.note) }}
            {{ form_row(form.commentaire) }}
            {{ form_row(form.dateCotation) }}

            {# IL FAUT cacher ces deux champs avec du CSS, mais ne les enleves pas car ils contiennent l'User et l'Entreprise.
            Ce ne sont pas de champs pour sélectionner quoi qui ce soit mais pour fixer les infos qu'on a déjà #}
            {{ form_row(form.entreprise) }}
            {{ form_row(form.user) }}
            {{ form_row(form.critere) }}

            <button class="enregistrement btn btn-primary">Enregistrer</button>
            {{ form_end(form) }}
        {% endfor %}
    </div>
</div>
{% endblock %}

{% block javascripts %}
    {# Axios  #}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.5.1/axios.min.js" integrity="sha512-emSwuKiMyYedRwflbZB2ghzX8Cw8fmNVgZ6yQNNXXagFzFOaQmbvQ1vmDkddHjm5AITcBIZfC7k4ShQSjgPAmQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    {# Gestion des submit des forms #}
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const div_cotations = document.getElementById('div_cotations');

            // Obtenir tous les formulaires
            let forms = document.getElementsByClassName ('form-cotation');
            
            // Fixer quoi faire dans le submit: appel axios pour envoyer et enregistrer la Cotation
            Array.from(forms).forEach ( function (form){

                form.addEventListener('submit', function(event) {
                    event.preventDefault();

                    // on créer le FormData à partir de ce form
                    const formData = new FormData(form); // La cotation es complete, on peut l'enregistrer
                    
                    axios.post('/cotation/enregistrer', formData)
                        .then(response => {
                            // Tout ok... faire quoi qui ce soit
                            alert ("enregistrement ok"); // changer ici quelque chose dans le DOM et enlever cet alert
                            console.log(response.data);
                        })
                        .catch(error => {
                            // Erreur
                            console.error(error);
                        });
                });
            });



            
        });
    </script>
{% endblock %}
